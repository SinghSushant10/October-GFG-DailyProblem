#Subarray range with given sum
Given an unsorted array of integers arr[], and a target tar, determine the number of subarrays whose elements sum up to the target value.
Examples:
Input: arr[] = [10, 2, -2, -20, 10] , tar = -10
Output: 3
Explanation: Subarrays with sum -10 are: [10, 2, -2, -20], [2, -2, -20, 10] and [-20, 10].



class Solution {
    // Function to count the number of subarrays which adds to the given sum.
    static int subArraySum(int arr[], int tar) {
        // add your code here
        Map<Integer,Integer> map = new HashMap<>();
        int ans =0 , sum =0;
        for(int x: arr){
            sum+=x;
            if(sum==tar){
                ans++;
            }
            if(map.get(sum-tar)!=null){
                ans +=map.get(sum-tar);
            }
            map.put(sum,map.getOrDefault(sum,0)+1);
        }
        return ans;
    }
}
