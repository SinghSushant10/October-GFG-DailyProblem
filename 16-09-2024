#Two Swaps
Given a permutation of some of the first natural numbers in an array arr[], determine if the array can be sorted in exactly two swaps. A swap can involve the same pair of indices twice.
Return true if it is possible to sort the array with exactly two swaps, otherwise return false.

class Solution {

    public boolean checkSorted(List<Integer> arr) {
        // code here
        int count =0;
        for(int i =0; i<arr.size();i++){
            if(arr.get(i)!=i+1){
                int temp = arr.get(i);
                arr.set(i,arr.get(arr.get(i)-1));
                arr.set(temp-1,temp);
                i--;
                count++;
            }
            if(count >2) return false;
        }
        return count==2||count==0 ;
        
    }
}
