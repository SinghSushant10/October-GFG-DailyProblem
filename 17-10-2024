#Split Linked List Alternatingly
TC:O(n) ,SC:O(1)

class Solution {
    // Function to append a new node with newData at the end of a linked list
    Node[] alternatingSplitList(Node head) {
        // code here
       Node head1= null,head2=null;
       Node temp1=null, temp2=null;
       int count =0; 
       while(head!=null){
           //if count is even , add the node to first list 
           if(count%2==0){
               if(head1==null){
                   head1=head;
                   temp1=head;
               }
               else{
                   temp1.next=head;
                   temp1=temp1.next;
               }
           }
           //if count is odd, add the node to second list 
          else{
              if(head2==null){
                  head2=head;
                  temp2=head;
              }
              else{
                  temp2.next=head;
                  temp2=temp2.next;
              }
          }
            // Move to the next node in the original list
            head=head.next;
            count++;
       }
       //terminate  both list by setting the next pointer of last node to null
       temp1.next=null;
       temp2.next=null;
       //create an array to hold two array list
       Node[] ans = new Node[2];
       //stored the heads of two list in the array
       ans[0]=head1;
       ans[1]=head2;
       return ans ;
       
    }
}
