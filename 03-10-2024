#Majority Vote
class Solution {
    public List<Integer> findMajority(List<Integer> nums) {
        int n = nums.size();
   
        
        int elem1 = 0, elem2 = 0; // Initialize to distinct values
        int count1 = 0, count2 = 0;

        // First pass: Find potential candidates
        for (int num : nums) {
            if (num == elem1) {
                count1++;
            } else if (num == elem2) {
                count2++;
            } else if (count1 == 0) {
                elem1 = num;
                count1 = 1;
            } else if (count2 == 0) {
                elem2 = num;
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }

        // Second pass: Verify the candidates
        int freq1 = 0, freq2 = 0;
        for (int num : nums) {
            if (num == elem1) freq1++;
            else if (num == elem2) freq2++;
        }

        List<Integer> ans = new ArrayList<>();
        if (freq1 > n / 3) ans.add(elem1);
        if (freq2 > n / 3) ans.add(elem2);

        // The answer should be in increasing order
        if (ans.isEmpty())ans.add(-1);
        
        return ans;
    }
}
